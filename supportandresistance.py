# -*- coding: utf-8 -*-
"""SupportAndResistance.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V620xclrnhsJQt_KXCguI9_gjOym5Nhi
"""

import pandas as pd
import numpy as np
import yfinance as yf
from mpl_finance import candlestick_ohlc
import matplotlib.pyplot as plt
import matplotlib.dates as mpl_dates
plt.rcParams['figure.figsize']=[12,7]

pip install mpl_finance

stock='TATAMOTORS.NS'
ticker=yf.Ticker(stock)
df=ticker.history(interval="1d", start="2020-05-12",end="2020-09-19")
df['Date'] = pd.to_datetime(df.index)
df['Date'] = df['Date'].apply(mpl_dates.date2num)
df = df.loc[:,['Date', 'Open', 'High', 'Low', 'Close']]
df

def isSupport(df,i):
  support = df['Low'][i] < df['Low'][i-1]  and df['Low'][i] < df['Low'][i+1] and df['Low'][i+1] < df['Low'][i+2] and df['Low'][i-1] < df['Low'][i-2]

  return support

def isResistance(df,i):
  resistance = df['High'][i] > df['High'][i-1]  and df['High'][i] > df['High'][i+1] and df['High'][i+1] > df['High'][i+2] and df['High'][i-1] > df['High'][i-2] 

  return resistance

s=np.mean(df['High']-df['Low'])

def isFarFromLevel(l,levels):
   return np.sum([abs(l-x) < s for x in levels])==0

levels = []
for i in range(2,df.shape[0]-2):
  if isSupport(df,i):
      l=df['Low'][i]
      if isFarFromLevel(l,levels):  
         levels.append((i,df['Low'][i]))
  elif isResistance(df,i):
     l=df['Low'][i]
     if isFarFromLevel(l,levels):  
         levels.append((i,df['Low'][i]))
levels

def plot():
  fig,ax=plt.subplots()
  candlestick_ohlc(ax,df.values,width=0.5, colorup='green', colordown='red', alpha=0.7)
  date_format = mpl_dates.DateFormatter('%d %b %Y')
  ax.xaxis.set_major_formatter(date_format)
  fig.suptitle('Support And Resistance', fontsize=16)
  ax.set_xlabel('Date',fontsize=16)
  ax.set_ylabel('Price',fontsize=16)
  # ax.legend("TATA MOTORS",loc="upper left")
  fig.autofmt_xdate()
  fig.tight_layout()
  for level in levels:
    plt.hlines(level[1],xmin=df['Date'][level[0]],xmax=max(df['Date']),colors='blue')
  fig.show()

plot()





